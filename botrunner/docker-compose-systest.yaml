version: '3'

services:
  nats:
    image: ${NATS_SERVER_IMAGE}
    command:
      - "/bin/sh"
      - "-c"
      - "nats-server --config /etc/nats/nats-server.conf ${NATS_OPTS}"

  redis:
    image: ${REDIS_IMAGE}

  postgres:
    image: ${POSTGRES_IMAGE}
    environment:
      POSTGRES_USER: 'game'
      POSTGRES_PASSWORD: 'game'

  api-server:
    image: ${API_SERVER_IMAGE}
    depends_on:
      - postgres
      - nats
      - redis
    command:
      - "/bin/sh"
      - "-c"
      - "sleep 5 && yarn run-docker"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NATS_URL: nats://nats:4222
      BOTRUNNER_URL: http://botrunner:8081
      TIMER_URL: http://timer:8082
      SCHEDULER_URL: http://scheduler:8083
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'game'
      POSTGRES_PASSWORD: 'game'
      POSTGRES_DB: 'game'

  game-server:
    image: ${GAME_SERVER_IMAGE}
    tty: true
    restart: always
    depends_on:
      - nats
      - api-server
    environment:
      PERSIST_METHOD: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      API_SERVER_URL: http://api-server:9501
      NATS_URL: nats://nats:4222
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'game'
      POSTGRES_PASSWORD: 'game'
      POSTGRES_CRASH_DB: 'livegames'
      DISABLE_DELAYS: 1
      ENABLE_ENCRYPTION: 1
      SYSTEM_TEST: 1
      LOG_LEVEL: 'debug'
    command:
      - "./entrypoint_system_test.sh"

  botrunner:
    image: ${BOTRUNNER_IMAGE}
    tty: true
    depends_on:
      - api-server
      - game-server
    environment:
      API_SERVER_URL: http://api-server:9501
      GAME_SERVER_URL: http://game-server:8080
      NATS_URL: nats://nats:4222
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'game'
      POSTGRES_PASSWORD: 'game'
      POSTGRES_CRASH_DB: 'livegames'
      DISABLE_DELAYS: 0
      ENABLE_ENCRYPTION: 1
      LOG_LEVEL: 'debug'

  timer:
    image: ${TIMER_IMAGE}
    tty: true
    environment:
      API_SERVER_URL: http://api-server:9501
      LOG_LEVEL: 'debug'

  scheduler:
    image: ${SCHEDULER_IMAGE}
    tty: true
    environment:
      API_SERVER_URL: http://api-server:9501
      LOG_LEVEL: 'debug'
      POST_PROCESSING_TIMEOUT_SEC: 10

networks:
  default:
    external:
      name: ${TEST_DOCKER_NET}
