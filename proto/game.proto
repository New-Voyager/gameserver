syntax = "proto3";
package game;
option go_package = "./game";
import "enums.proto";

message PlayerState {
  float buy_in = 1;
  float current_balance = 2;
  PlayerStatus status = 3;
  string game_token = 4;
  uint64 game_token_int = 5;    // 40 bit number to do XOR decipher the cards
}

// Player update comes from the API server
// The same message is sent for 
//    Player sitting in a seat
//    Player buying/reloading chips
//    Player taking a break
//    Player leaving the game
//    Player moving to a new seat
message GamePlayerUpdate {
  uint64 player_id = 1;
  uint32 seat_no = 2;
  float stack = 3;
  float buy_in = 4;
  string game_token = 5;
  PlayerStatus status = 6;
  float reload_chips = 7;
  NewUpdate new_update = 8;
  uint32 old_seat = 9;
  string break_exp_at = 10;
}

// SeatMove message used when a host is rearranging the seats
// the client will show animations to show who is moving where
message SeatMove {
  uint64 playerId = 1;
  string playerUuid = 2;
  string name = 3;
  float stack = 4;
  uint32 oldSeatNo = 5;
  uint32 newSeatNo = 6;
}


// SeatUpdate message used to broadcast latest updates happen to a seat
message SeatUpdate {
  uint32 seat_no = 1;
  uint64 player_id = 2;
  string player_uuid = 3;
  string name = 4;
  float stack = 5;
  PlayerStatus player_status = 6;
  bool open_seat = 7;
}


message TableUpdate {
  uint32 seat_no = 1;
  string type = 2;
  uint32 seat_change_time = 3;
  string waitlist_player_name = 4;
  uint32 waitlist_remaining_time = 5;
  uint64 waitlist_player_id = 6;
  string waitlist_player_uuid = 7;
  repeated uint64 seat_change_players = 8;
  repeated uint64 seat_change_seat_no = 9;
  uint64 seat_change_host = 10;       // host who is making seat rearrangements
  repeated SeatMove seat_moves = 11;  // seats moved
  repeated SeatUpdate seat_updates = 12; // updated seats
}

message PlayerConfigUpdate {
  uint64 player_id = 1;
  bool muck_losing_hand = 2;
  bool run_it_twice_prompt = 3;
}